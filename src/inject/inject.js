// Generated by CoffeeScript 1.8.0
(function() {
  var checkAnswer, fadeTextChange, increaseScore, putRandomPos, removedPhotos, resetGame, setUpGame, showNormal, showQuiz, toggleForm,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  removedPhotos = false;

  toggleForm = function(lientry) {
    var basics, quiz;
    quiz = lientry.find(".hr_quiz").fadeToggle();
    return basics = lientry.find(".basics").fadeToggle();
  };

  showQuiz = function(lientry) {
    var basics, quiz;
    quiz = lientry.find(".hr_quiz").fadeIn();
    return basics = lientry.find(".basics").fadeOut();
  };

  showNormal = function(lientry) {
    lientry.find(".hr_quiz").fadeOut();
    return lientry.find(".basics").fadeIn();
  };

  increaseScore = function(isExpert) {
    var newScore, score;
    score = $(".score_correct");
    if (isExpert) {
      score = $(".score_correct_first");
    }
    newScore = parseInt(score.text()) + 1;
    return score.text(newScore.toString());
  };

  checkAnswer = function(clickedObject, basicsSelector, answerSelector, textProcessing) {
    var answer, answerArray, answerRegex, answerSpan, hintlevel, letInd, solvelevel;
    answerArray = clickedObject.val().toLowerCase().split("");
    answerRegex = "^.?";
    for (letInd in answerArray) {
      answerRegex += answerArray[letInd] + ".?";
    }
    answerRegex += "$";
    answerRegex = new RegExp(answerRegex);
    answer = clickedObject.parent().next(".basics").find(basicsSelector).text();
    if (textProcessing) {
      answer = textProcessing(answer).trim();
    }
    answerSpan = clickedObject.next(answerSelector);
    if (answer.toLowerCase().search(answerRegex) !== -1) {
      console.log("Correct the answer is " + answer);
      increaseScore(false);
      if (answerSpan.text().length < 1) {
        increaseScore(true);
      }
      fadeTextChange(answerSpan, "Correct the answer is " + answer);
      clickedObject.val(answer);
      clickedObject.prop("readonly", true);
      solvelevel = clickedObject.parent().attr('solved');
      solvelevel -= 1;
      clickedObject.parent().attr('solved', solvelevel);
      console.log("solved level is " + solvelevel);
      if (solvelevel <= 0) {
        console.log("solved!");
        toggleForm(clickedObject.parent().parent());
      }
    } else {
      hintlevel = parseInt(answerSpan.attr("hint")) + 1;
      fadeTextChange(answerSpan, "Incorrect, but here's a hint: " + answer.substring(0, hintlevel));
      answerSpan.attr("hint", hintlevel.toString());
    }
  };

  fadeTextChange = function(boxToFade, textToFade) {
    return boxToFade.fadeOut(200, function() {
      return $(this).text(textToFade).fadeIn(200);
    });
  };

  putRandomPos = function(entryselector, max) {
    var loc1, loc2;
    loc1 = Math.floor(Math.random() * max);
    loc2 = Math.floor(Math.random() * max);
    return $(entryselector[loc1]).insertBefore($(entryselector[loc2]));
  };

  setUpGame = function() {
    var NUM_QUESTIONS, curText, loc, quiz_element, scorearea, title, titlesArr, _i, _j, _len, _len1, _ref;
    titlesArr = [];
    _ref = $(".location");
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      loc = _ref[_i];
      curText = $(loc).text().split("-")[0].trim();
      if (__indexOf.call(titlesArr, curText) < 0) {
        titlesArr.push(curText);
      }
    }
    scorearea = $("<div class=\"score_area\">" + "<h3>PRESS ENTER TO SUBMIT YOUR GUESS FOR NAME/TITLE AND GOOD LUCK</h3>" + "<span class=\"score_text\"><h2>Score:</h2>" + "<span class=\"score_correct\"></span>/" + "<span class=\"score_total\"></span></span><br>" + "<span class=\"score_text\"><h2>Expert Mode Score:</h2>" + "<span class=\"score_correct_first\"></span>/<span class=\"score_total\"></span></span>" + "</div>");
    scorearea.insertAfter($(".intro_area"));
    quiz_element = $("<div class=\"hr_quiz\" solved=\"0\"> <span class=\"sp_name span_q_title\">First name:</span><input type=\"text\" name=\"name\" class=\"em_name question\"><span hint=\"0\" class=\"an_name hintcont\"></span><br> <span class=\"sp_team span_q_title\">Team:</span> <select name=\"title\" class=\"em_team question\"></select><span class=\"an_team hintcont\" hint=\"0\"></span> </div>");
    quiz_element.find('select').append("<option value=\"nonetype\">Select A Team</option>");
    for (_j = 0, _len1 = titlesArr.length; _j < _len1; _j++) {
      title = titlesArr[_j];
      if (title.trim() !== "") {
        quiz_element.find('select').append("<option value=\"" + title.toLowerCase().replace(/\s/g, '') + "\">" + title + "</option>");
      }
    }
    NUM_QUESTIONS = 2;
    quiz_element.attr('solved', NUM_QUESTIONS);
    quiz_element.insertBefore($(".basics"));
    $(".em_name").keyup(function(e) {
      if (e.keyCode === 13) {
        return checkAnswer($(this), "dt", ".an_name", function(e) {
          e = e.split(",");
          return e[1];
        });
      }
    });
    $(".em_team").change(function(e) {
      return checkAnswer($(this), $(".location"), ".an_team", function(e) {
        e = e.split("-");
        return e[0];
      });
    });
    return NUM_QUESTIONS;
  };

  resetGame = function(numinputs) {
    var el, emPics, header, i, photo, quizel, swaps, totalEmpPic, _i, _j, _k, _l, _len, _len1, _len2, _ref, _ref1, _ref2;
    emPics = $(".empPhoto");
    swaps = $(".entry").length - 1;
    totalEmpPic = 0;
    console.log("the number of entries is " + swaps);
    _ref = $(".basics").parent();
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      el = _ref[_i];
      console.log("The photo's src is " + $(el).find(emPics).attr("src"));
      if (!(/udacity.bamboohr.com/.test($(el).find(emPics).attr("src")) || ($(el).find(emPics).attr("src") === chrome.extension.getURL('images/faceless.png')))) {
        showQuiz($(el));
        totalEmpPic++;
      }
    }
    $(".score_total").text(totalEmpPic * 2);
    $(".score_correct").text("0");
    $(".score_correct_first").text("0");
    $(".score_area").fadeIn();
    for (i = _j = 0, _ref1 = swaps * 2; _j <= _ref1; i = _j += 1) {
      putRandomPos($(".entry"), swaps);
    }
    $('.hintcont').attr('hint', '0');
    quizel = $('.hr_quiz');
    quizel.attr('solved', numinputs);
    quizel.find("input").val("");
    $(".hintcont").text("");
    _ref2 = $(".letterHeader");
    for (i = _k = 0, _len1 = _ref2.length; _k < _len1; i = ++_k) {
      header = _ref2[i];
      if ($(header).find("li").length < 1) {
        console.log("removing " + header);
        $(header).remove();
      }
    }
    if (!removedPhotos) {
      for (_l = 0, _len2 = emPics.length; _l < _len2; _l++) {
        photo = emPics[_l];
        if (/udacity.bamboohr.com/.test($(photo).attr("src"))) {
          $(photo).attr("src", chrome.extension.getURL('images/faceless.png'));
        }
      }
      return removedPhotos = true;
    }
  };

  chrome.extension.sendMessage({}, function(response) {
    var readyStateCheckInterval;
    readyStateCheckInterval = setInterval(function() {
      var NUM_QUESTIONS, intro;
      if (document.readyState === "complete") {
        clearInterval(readyStateCheckInterval);
        console.log("Hello. This message was sent from scripts/inject.js");
        intro = $("<h3>Hi....Jon?</h3><div class=\"intro_area\">Udacity's gotten a lot bigger since the good ol' days. Do you really know that new Course Developer's name? The friendly one who always says hi in the morning? Wasn't it Mark? Sam? Jon..a..if...er?<br/><br/><button class=\"play_button\" type=\"button\">Prove Your Name-Fu</button></div>");
        intro.insertAfter($("#contentTop"));
        $(".play_button").click(function() {
          $(".branded-icon").css("visibility", "hidden");
          $(".entry").css("border-bottom", "solid #d9d9d9 1px");
          return resetGame(NUM_QUESTIONS);
        });
        NUM_QUESTIONS = setUpGame();
      }
    }, 10);
  });

}).call(this);
