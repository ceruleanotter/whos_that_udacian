// Generated by CoffeeScript 1.8.0
(function() {
  var checkAnswer, fadeTextChange, putRandomPos, resetGame, setUpGame, showNormal, showQuiz, toggleForm;

  toggleForm = function(lientry) {
    var basics, quiz;
    quiz = lientry.find(".hr_quiz").fadeToggle();
    return basics = lientry.find(".basics").fadeToggle();
  };

  showQuiz = function(lientry) {
    var basics, quiz;
    quiz = lientry.find(".hr_quiz").fadeIn();
    return basics = lientry.find(".basics").fadeOut();
  };

  showNormal = function(lientry) {
    lientry.find(".hr_quiz").fadeOut();
    return lientry.find(".basics").fadeIn();
  };

  checkAnswer = function(clickedObject, basicsSelector, answerSelector, textProcessing) {
    var answer, answerArray, answerRegex, answerSpan, hintlevel, letInd, solvelevel;
    answerArray = clickedObject.val().toLowerCase().split("");
    answerRegex = "^.?";
    for (letInd in answerArray) {
      answerRegex += answerArray[letInd] + ".?";
    }
    answerRegex += "$";
    answerRegex = new RegExp(answerRegex);
    answer = clickedObject.parent().next(".basics").find(basicsSelector).text();
    if (textProcessing) {
      answer = textProcessing(answer).trim();
    }
    console.log(answerRegex);
    console.log("pressed enter in the answer box");
    console.log("the text is " + answer);
    answerSpan = clickedObject.next(answerSelector);
    if (answer.toLowerCase().search(answerRegex) !== -1) {
      console.log("Correct the answer is " + answer);
      fadeTextChange(answerSpan, "Correct the answer is " + answer);
      clickedObject.val(answer);
      clickedObject.prop("readonly", true);
      solvelevel = clickedObject.parent().attr('solved');
      solvelevel -= 1;
      clickedObject.parent().attr('solved', solvelevel);
      console.log("solved level is " + solvelevel);
      if (solvelevel <= 0) {
        console.log("solved!");
        toggleForm(clickedObject.parent().parent());
      }
    } else {
      hintlevel = parseInt(answerSpan.attr("hint")) + 1;
      fadeTextChange(answerSpan, "Incorrect, but here's a hint: " + answer.substring(0, hintlevel));
      answerSpan.attr("hint", hintlevel.toString());
    }
  };

  fadeTextChange = function(boxToFade, textToFade) {
    return boxToFade.fadeOut(200, function() {
      return $(this).text(textToFade).fadeIn(200);
    });
  };

  putRandomPos = function(entryselector, max) {
    var loc1, loc2;
    loc1 = Math.floor(Math.random() * max);
    loc2 = Math.floor(Math.random() * max);
    return $(entryselector[loc1]).insertBefore($(entryselector[loc2]));
  };

  setUpGame = function() {
    var NUM_INPUTS, quiz_element;
    quiz_element = $("<div class=\"hr_quiz\" solved=\"0\"> First name:<input type=\"text\" name=\"name\" class=\"em_name\"><span hint=\"0\" class=\"an_name hintcont\"></span><br> Team: <input type=\"text\" name=\"title\" class=\"em_team\"><span class=\"an_team hintcont\" hint=\"0\"></span> </div>");
    NUM_INPUTS = quiz_element.find("input").length;
    quiz_element.attr('solved', NUM_INPUTS);
    quiz_element.insertBefore($(".basics"));
    $(".em_name").keyup(function(e) {
      if (e.keyCode === 13) {
        return checkAnswer($(this), "dt", ".an_name", function(e) {
          e = e.split(",");
          return e[1];
        });
      }
    });
    $(".em_team").keyup(function(e) {
      if (e.keyCode === 13) {
        return checkAnswer($(this), $(".location"), ".an_team", function(e) {
          e = e.split("-");
          return e[0];
        });
      }
    });
    return NUM_INPUTS;
  };

  resetGame = function(numinputs) {
    var el, i, quizel, swaps, _i, _j, _len, _ref;
    _ref = $(".basics").parent();
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      el = _ref[_i];
      showQuiz($(el));
    }
    swaps = $(".entry").length - 1;
    for (i = _j = 0; _j <= swaps; i = _j += 1) {
      putRandomPos($(".entry"), swaps);
    }
    $('.hintcont').attr('hint', '0');
    quizel = $('.hr_quiz');
    quizel.attr('solved', numinputs);
    quizel.find("input").val("");
    return $(".hintcont").text("");
  };

  chrome.extension.sendMessage({}, function(response) {
    var readyStateCheckInterval;
    readyStateCheckInterval = setInterval(function() {
      var NUM_INPUTS, intro, scorearea;
      if (document.readyState === "complete") {
        clearInterval(readyStateCheckInterval);
        console.log("Hello. This message was sent from scripts/inject.js");
        intro = $("<h1>Hi....Jon?</h1><div class=\"intro_area\">Udacity's gotten a lot bigger since the good ol' days. Do you really know that new Course Developer's name? The friendly one who always says hi in the morning? Wasn't it Mark? Sam? Jon..a..if...er?<br/><br/><button class=\"play_button\" type=\"button\">Prove Your Name-Fu</button></div>");
        intro.insertAfter($("#contentTop"));
        scorearea = $("<div class=\"score_area\"><span class=\"score_text\">Score:<span class=\"score_correct\"></span>/<span class=\"score_total\"></span></span><br><span class=\"score_text\">Expert Mode Score:<span class=\"score_correct_first\"></span>/<span class=\"score_total\"></span></span></div>");
        $(".play_button").click(function() {
          $(".branded-icon").css("visibility", "hidden");
          $(".entry").css("border-bottom", "solid #d9d9d9 1px");
          return resetGame(NUM_INPUTS);
        });
        NUM_INPUTS = setUpGame();
      }
    }, 10);
  });

}).call(this);
